<div class="container py-5">
	<div class="row justify-content-center">
		<div class="col-lg-10">
			<div class="card shadow-lg border-0 bg-dark text-light" style="margin-bottom: 100px;">
				<div class="card-body p-4 p-md-5">
					<div class="d-flex justify-content-between align-items-center mb-3">
						<h2 class="mb-0" style="color:#ffc107;">About CineRent</h2>
						<span class="badge bg-secondary">Customer scope</span>
					</div>
					<p class="text-light-50 mb-4">Deze pagina beschrijft de huidige user-stories en acceptatiecriteria voor zowel de klantrol (Customer) als voor medewerkers (Staff). Toen ik dit project begon was mijn focus vooral gericht op de customers. Maar om meer te leren en ook gebruik te kunnen maken van authorisatie, heb ik ook een omgeving in mijn website ontwikkeld voor de staff (medewerkers).</p>

					<hr class="border-secondary" />

					<h4 class="mt-4 mb-3" style="color:#ffc107;">User Stories — Customer</h4>

                    <!-- US1 -->
                    <div class="mb-4">
                        <h5 class="mb-2">US1: Als klant wil ik veilig kunnen registreren en inloggen</h5>
                        <p class="text-secondary mb-2">Zodat mijn account goed beveiligd is en alleen ik toegang heb tot mijn gegevens.</p>
                        <div class="bg-secondary bg-opacity-25 rounded p-3">
                            <b>Acceptatiecriteria:</b>
                            <ul class="mb-0">
								<li>Login via <code>/login</code> met e-mail en wachtwoord (services: <code>auth.service.js</code>).</li>
                                <li>Wachtwoord validatie bij registratie: minimaal 8 tekens, 1 hoofdletter, 1 kleine letter, 1 cijfer en 1 speciaal teken (<code>auth.service.js</code>).</li>
                                <li>Wachtwoorden worden gehasht met <code>bcrypt</code> voordat ze opgeslagen worden.</li>
                                <li>Bij succesvol inloggen worden sessievariabelen gezet (<code>logged_in</code>, <code>role</code>, <code>user_id</code>, <code>username</code>).</li>
                                <li>Beveiligde routes controleren in de controller op <code>req.session.logged_in</code> en juiste <code>role</code> (bijv. "CUSTOMER").</li>
                                <li>Onjuiste inlog toont nette foutmelding aan de gebruiker waarin geen gevoelige gegevens staan.</li>
                                <li>Logout via <code>/logout</code> wist de sessie en redirect naar <code>/</code>.</li>
                            </ul>
                        </div>
                    </div>

					<!-- US2 -->
					<div class="mb-4">
						<h5 class="mb-2">US2: Als klant wil ik mijn profiel kunnen aanmaken</h5>
						<p class="text-secondary mb-2">Zodat mijn adres- en contactgegevens zijn opgeslagen en ik films kan huren.</p>
						<div class="bg-secondary bg-opacity-25 rounded p-3">
							<b>Acceptatiecriteria:</b>
							<ul class="mb-0">
								<li>Route <code>/customer/createProfile</code> toont een formulier met velden: naam, telefoon, adres (straat + huisnummer, district, postcode, stad, land) en winkel.</li>
								<li>Verzenden via <code>POST /customer/createProfile</code> slaat gegevens op via service <code>addNewCustomer.service.js</code>.</li>
								<li>Service controleert/maakt land en stad aan (<code>checkIfCountryExists</code>, <code>addNewCountry</code>, <code>checkIfCityExists</code>, <code>addNewCity</code>), voegt adres toe en koppelt klant (DAO).</li>
								<li>Na succesvol aanmaken redirect naar <code>/customer</code>.</li>
                                <li><code>/customer</code> is onbereikbaar totdat klant informatie is ingevuld. Redirect anders altijd naar <code>/customer/createProfile</code>.</li>
							</ul>
						</div>
					</div>

					<!-- US3 -->
					<div class="mb-4">
						<h5 class="mb-2">US3: Als klant wil ik mijn profiel kunnen bewerken</h5>
						<p class="text-secondary mb-2">Zodat ik wijzigingen in adres, naam, telefoon en winkel kan doorvoeren.</p>
						<div class="bg-secondary bg-opacity-25 rounded p-3">
							<b>Acceptatiecriteria:</b>
							<ul class="mb-0">
								<li>Route <code>/customer/updateProfile</code> toont een vooraf ingevuld formulier met huidige gegevens.</li>
								<li>Form fields zijn geprefilled met <code>customerInfo</code> (o.a. straat + huisnummer afgeleid uit <code>address</code>) - De oude klant informatie.</li>
								<li>Verzenden via <code>POST /customer/updateProfile</code> werkt gegevens bij via <code>updateCustomer.service.js</code>.</li>
								<li>Service hergebruikt land/stad check & aanmaak en update adres en persoonlijke info (DAO: <code>updateUserAddress</code>, <code>updateUserPersonalInformation</code>).</li>
								<li>Na succes redirect naar <code>/customer</code>.</li>
							</ul>
						</div>
					</div>

					<!-- US4 -->
					<div class="mb-4">
						<h5 class="mb-2">US4: Als klant wil ik mijn dashboard zien</h5>
						<p class="text-secondary mb-2">Zodat ik mijn gegevens, actieve huur en historie overzichtelijk kan bekijken.</p>
						<div class="bg-secondary bg-opacity-25 rounded p-3">
							<b>Acceptatiecriteria:</b>
							<ul class="mb-0">
								<li>Route <code>/customer</code> toont profielkaart met naam, gebruikersnaam, e-mail, telefoon en adres.</li>
								<li>Actieve huur en verhuurhistorie worden opgehaald via service <code>getCustomerRentalInformation.service.js</code>.</li>
								<li>Er wordt berekend of verhuurde films niet te hun huurtijd overschreiden. Zo ja, wordt dit weergegeven aan gebruiker m.b.v. waarschuwende text.</li>
							</ul>
						</div>
					</div>

					<!-- US5 -->
					<div class="mb-4">
						<h5 class="mb-2">US5: Als klant wil ik films kunnen ontdekken</h5>
						<p class="text-secondary mb-2">Zodat ik films kan vinden op basis van filters en details kan bekijken.</p>
						<div class="bg-secondary bg-opacity-25 rounded p-3">
							<b>Acceptatiecriteria:</b>
							<ul class="mb-0">
								<li>Route <code>/movies</code> toont een lijst met filters (titel, rating, categorie) en sorteeropties.</li>
								<li>Er is paginering dat werkt via queryparameters. Deze worden gebruikt in de DAO: <code>/dao/movies</code></li>
								<li>Route <code>/movies/:movieID</code> toont detailpagina met beschikbaarheid per winkel en top-10 op home. Hier kun je ook op komen via gefilterde films vanuit <code>/movies</code>.</li>
							</ul>
						</div>
					</div>

					<!-- US6 -->
					<div class="mb-4">
						<h5 class="mb-2">US6: Als klant wil ik consistente foutafhandeling ervaren</h5>
						<p class="text-secondary mb-2">Zodat ik begrijpelijke meldingen krijg wanneer er iets misgaat.</p>
						<div class="bg-secondary bg-opacity-25 rounded p-3">
							<b>Acceptatiecriteria:</b>
							<ul class="mb-0">
								<li>Controller gebruikt <code>next(error)</code> met correcte statuscodes (404, 500) waar toepasselijk.</li>
								<li>Validatie en DB-fouten in services/DAO geven nette foutobjecten terug die de controller kan afvangen.</li>
								<li>Lege-staten in views tonen duidelijke meldingen (bijv. "No active rentals").</li>
							</ul>
						</div>
					</div>

					<hr class="border-secondary" />

					<h4 class="mt-4 mb-3" style="color:#ffc107;">User Stories — Staff</h4>

					<!-- ST1 -->
					<div class="mb-4">
						<h5 class="mb-2">ST1: Als medewerker wil ik per film en winkel de inventaris beheren</h5>
						<p class="text-secondary mb-2">Zodat ik snel kan zien welke exemplaren beschikbaar, verhuurd of buiten gebruik zijn en kan doorsturen naar de juiste acties.</p>
						<div class="bg-secondary bg-opacity-25 rounded p-3">
							<b>Acceptatiecriteria:</b>
							<ul class="mb-0">
								<li>Overzichtspagina toont per exemplaar: status, laatste/actieve huurder, klant-ID en klant e-mail.</li>
								<li>Kopteksten en rijen geven duidelijk onderscheid: actieve huurder vet/wit, laatste huurder grijs.</li>
								<li>Actieknoppen: <i>Rent to</i>, <i>Take In</i>, <i>Retire</i>, <i>Add Copy</i> (alleen zichtbaar waar logisch van toepassing).</li>
							</ul>
						</div>
					</div>

					<!-- ST2 -->
					<div class="mb-4">
						<h5 class="mb-2">ST2: Als medewerker wil ik een verhuur kunnen aanmaken met een bevestiging</h5>
						<p class="text-secondary mb-2">Zodat ik fouten voorkom en direct de betaling kan registreren.</p>
						<div class="bg-secondary bg-opacity-25 rounded p-3">
							<b>Acceptatiecriteria:</b>
							<ul class="mb-0">
								<li>Klantselectiepagina behoudt context via hidden velden en filters; <i>Rent to</i>-knop is verborgen als <code>customer_id</code> ontbreekt.</li>
								<li>Bevestigingsmodal toont film, klant, winkel en bedragen (huurprijs <code>$</code>, vervangingskosten <code>$</code>), met duidelijke call-to-action.</li>
								<li>Verhuur wordt aangemaakt via <code>POST /staff/rentCopy/makeRental</code>; server valideert verplichte velden en parseert IDs.</li>
								<li>Als een film wordt verhuurt voegt de service een <code>payment</code> toe op basis van <code>rental_rate</code>.</li>
								<li>Na succes redirect naar <code>/staff/inventory/:movieId?storeId=</code> met correcte IDs; Zo kan medewerker zien dat de rental correct is uitgevoerd.</li>
							</ul>
						</div>
					</div>

					<!-- ST3 -->
					<div class="mb-4">
						<h5 class="mb-2">ST3: Als medewerker wil ik een verhuur kunnen innemen</h5>
						<p class="text-secondary mb-2">Zodat exemplaren weer beschikbaar komen en overdues worden opgeheven.</p>
						<div class="bg-secondary bg-opacity-25 rounded p-3">
							<b>Acceptatiecriteria:</b>
							<ul class="mb-0">
								<li>Inname-actie werkt via <code>POST</code> endpoint dat <code>return_date</code> zet en status bijwerkt.</li>
								<li>Na succes wordt terug genavigeerd naar de inventarispagina van dezelfde film/winkel.</li>
							</ul>
						</div>
					</div>

					<!-- ST4 -->
					<div class="mb-4">
						<h5 class="mb-2">ST4: Als medewerker wil ik voorraad kunnen beheren</h5>
						<p class="text-secondary mb-2">Zodat ik exemplaren kan toevoegen of buiten gebruik kan stellen.</p>
						<div class="bg-secondary bg-opacity-25 rounded p-3">
							<b>Acceptatiecriteria:</b>
							<ul class="mb-0">
								<li><code>Add Copy</code> voegt een nieuw <code>inventory</code>-record toe voor de geselecteerde film/winkel.</li>
								<li><code>Retire</code> markeert een exemplaar als buiten gebruik; actie is alleen zichtbaar wanneer toepasbaar.</li>
								<li>Beide acties gebruiken <code>POST</code>, valideren input en redirecten terug naar de betreffende inventarislijst.</li>
							</ul>
						</div>
					</div>

					<!-- ST5 -->
					<div class="mb-4">
						<h5 class="mb-2">ST5: Als medewerker wil ik klanten kunnen beheren</h5>
						<p class="text-secondary mb-2">Zodat ik profielen kan inzien en bewerken binnen geldende beperkingen.</p>
						<div class="bg-secondary bg-opacity-25 rounded p-3">
							<b>Acceptatiecriteria:</b>
							<ul class="mb-0">
								<li>Lijst toont klanten met relevante velden; acties <i>Set Active</i> en <i>Edit</i> zijn verborgen als <code>customer_id</code> ontbreekt; klant heeft zijn/haar profiel nog niet afgerond.</li>
								<li>Klanten tonen aan of hun actieve rentals hebben. Indien van toepassing ziet de medewerker een knop die leidt naar deze rental om deze te beheren.</li>
								<li>Verwijderen van een klant vraagt om bevestiging via modal.</li>
							</ul>
						</div>
					</div>

					<!-- ST6 -->
					<div class="mb-4">
						<h5 class="mb-2">ST6: Als medewerker wil ik een store-dashboard met statistieken</h5>
						<p class="text-secondary mb-2">Zodat ik prestaties kan monitoren en snel kan bijsturen.</p>
						<div class="bg-secondary bg-opacity-25 rounded p-3">
							<b>Acceptatiecriteria:</b>
							<ul class="mb-0">
								<li>Op de store-dashboard pagina bevindt zich een form waarin de gebruiker een winkel kan selecteren om te filteren.</li>
								<li>Per store worden relevante gegevens via de DAO opgehaald en op een overzichtelijke manier getoond aan de gebruiker.</li>
							</ul>
						</div>
					</div>

					<!-- ST7 -->
					<div class="mb-4">
						<h5 class="mb-2">ST7: Als medewerker wil ik veilig kunnen inloggen</h5>
						<p class="text-secondary mb-2">Zodat mijn staff-account goed beveiligd is en ik alleen toegang heb tot staff-functionaliteiten.</p>
						<div class="bg-secondary bg-opacity-25 rounded p-3">
							<b>Acceptatiecriteria:</b>
							<ul class="mb-0">
								<li>Login via <code>/login</code> met e-mail en wachtwoord (service: <code>auth.service.js</code>), waarbij de <code>role</code> van de gebruiker <code>"STAFF"</code> is.</li>
								<li>Bij succesvol inloggen worden sessievariabelen gezet (<code>logged_in</code>, <code>role</code>=<code>"STAFF"</code>, <code>user_id</code>, <code>username</code>) en volgt redirect naar een staff-pagina (bijv. dashboard of inventarisbeheer).</li>
								<li>Beveiligde staff-routes controleren op <code>req.session.logged_in</code> en <code>role === "STAFF"</code> (bijv. via <code>checkAuthorisation(req, 'STAFF')</code>).</li>
								<li>Logout via <code>/logout</code> wist de sessie en redirect naar <code>/</code>.</li>
							</ul>
						</div>
					</div>

					<!-- ST8 -->
					<div class="mb-4">
						<h5 class="mb-2">ST8: Als medewerker wil ik consistente foutafhandeling ervaren</h5>
						<p class="text-secondary mb-2">Zodat ik begrijpelijke meldingen krijg wanneer er iets misgaat binnen staff-onderdelen.</p>
						<div class="bg-secondary bg-opacity-25 rounded p-3">
							<b>Acceptatiecriteria:</b>
							<ul class="mb-0">
								<li>Staff-controllers gebruiken <code>next(error)</code> met correcte statuscodes (400, 404, 500) waar toepasselijk; geen gevoelige details in responses.</li>
								<li>Validatie- en DB-fouten uit services/DAO geven nette foutobjecten terug die door de controller afgehandeld worden.</li>
								<li>Views tonen duidelijke lege-staten en foutmeldingen voor staff-acties (bijv. “Geen inventaris gevonden” of “Actie niet toegestaan”).</li>
							</ul>
						</div>
					</div>

					<hr class="border-secondary" />

					<div class="d-flex justify-content-between align-items-center">
						<div>
							<h5 class="mb-1" style="color:#ffc107;">Naar de applicatie</h5>
							<p class="mb-0 text-secondary">Ga terug naar de startpagina om de functionaliteiten te verkennen.</p>
						</div>
						<a href="/" class="btn btn-warning">Terug naar Home</a>
					</div>
				</div>
			</div>
		</div>
	</div>
</div>
