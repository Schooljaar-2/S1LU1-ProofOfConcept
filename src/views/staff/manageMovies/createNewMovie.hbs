
<div class="container py-4">
	<h1 class="display-6 fw-bold text-center mb-2" style="color: #ff3333; letter-spacing: 1px;">Create New Movie</h1>
	<div class="dashboard-title-underline mb-4"></div>
		<form id="create-movie-form" action="/dashboard/manageOrCreateMovies/create" method="POST" class="bg-dark p-4 rounded shadow mx-auto" style="max-width: 900px; margin-bottom: 100px;" novalidate>
		<div class="mb-3">
			<label for="title" class="form-label text-light">Title</label>
			<input type="text" class="form-control" id="title" name="title" required placeholder="Movie Title">
		</div>
		<div class="mb-3">
			<label for="description" class="form-label text-light">Description</label>
			<textarea class="form-control" id="description" name="description" rows="3" placeholder="Short description..."></textarea>
		</div>
		<div class="mb-3">
			<label for="film_image_url" class="form-label text-light">Film Image URL (optional)</label>
			<input type="url" class="form-control" id="film_image_url" name="film_image_url" placeholder="https://image.url">
		</div>
		<div class="row mb-3">
			<div class="col-md-6">
				<label for="category" class="form-label text-light">Categories</label>
				<select id="category" name="category" class="form-control" multiple>
					<option value="Action">Action</option>
					<option value="Animation">Animation</option>
					<option value="Children">Children</option>
					<option value="Classics">Classics</option>
					<option value="Comedy">Comedy</option>
					<option value="Documentary">Documentary</option>
					<option value="Drama">Drama</option>
					<option value="Family">Family</option>
					<option value="Foreign">Foreign</option>
					<option value="Games">Games</option>
					<option value="Horror">Horror</option>
					<option value="Music">Music</option>
					<option value="New">New</option>
					<option value="Sci-Fi">Sci-Fi</option>
					<option value="Sports">Sports</option>
					<option value="Travel">Travel</option>
				</select>
				<small class="text-secondary">Type to filter, click to select. Selected categories appear as tags.</small>
				<div id="selected-categories" class="mt-2"></div>
				<div id="hidden-categories"></div>
			</div>
			<div class="col-md-6">
				<label for="actors" class="form-label text-light">Actors</label>
				<select class="form-select staff-multiselect" id="actors" name="actors" multiple>
					{{#each actors}}
						<option value="{{this.actor_id}}">{{this.first_name}} {{this.last_name}}</option>
					{{/each}}
				</select>
				<small class="text-secondary">Hold Ctrl (Windows) or Cmd (Mac) to select multiple. You may also select just one.</small>
				<div id="selected-actors" class="mt-2"></div>
				<div id="hidden-actors"></div>
			</div>
		</div>
		<div class="row g-3">
			<div class="col-md-6">
				<label for="release_year" class="form-label text-light">Release Year</label>
				<input type="number" class="form-control" id="release_year" name="release_year" min="1900" max="2100" required placeholder="e.g. 2023">
			</div>
			<div class="col-md-6">
				<label for="language_id" class="form-label text-light">Language</label>
				<select class="form-select" id="language_id" name="language_id" required>
					<option value="">Select language</option>
					<option value="1">English</option>
					<option value="2">Italian</option>
					<option value="3">Japanese</option>
					<option value="4">Mandarin</option>
					<option value="5">French</option>
					<option value="6">German</option>
				</select>
			</div>
			<div class="col-md-6">
				<label for="original_language_id" class="form-label text-light">Original Language</label>
				<select class="form-select" id="original_language_id" name="original_language_id">
					<option value="">Select original language (optional)</option>
					<option value="1">English</option>
					<option value="2">Italian</option>
					<option value="3">Japanese</option>
					<option value="4">Mandarin</option>
					<option value="5">French</option>
					<option value="6">German</option>
				</select>
			</div>
			<div class="col-md-6">
				<label for="rental_duration" class="form-label text-light">Rental Duration (days)</label>
				<input type="number" class="form-control" id="rental_duration" name="rental_duration" min="1" required placeholder="e.g. 7">
			</div>
			<div class="col-md-6">
				<label for="rental_rate" class="form-label text-light">Rental Rate (€)</label>
				<input type="number" step="0.01" class="form-control" id="rental_rate" name="rental_rate" min="0" required placeholder="e.g. 3.99">
			</div>
			<div class="col-md-6">
				<label for="length" class="form-label text-light">Length (minutes)</label>
				<input type="number" class="form-control" id="length" name="length" min="1" required placeholder="e.g. 120">
			</div>
			<div class="col-md-6">
				<label for="replacement_cost" class="form-label text-light">Replacement Cost (€)</label>
				<input type="number" step="0.01" class="form-control" id="replacement_cost" name="replacement_cost" min="0" required placeholder="12.99">
			</div>
			<div class="col-md-6">
				<label for="rating" class="form-label text-light">Rating</label>
				<select class="form-select" id="rating" name="rating" required>
					<option value="">Select rating</option>
					<option value="G">G</option>
					<option value="PG">PG</option>
					<option value="PG-13">PG-13</option>
					<option value="R">R</option>
					<option value="NC-17">NC-17</option>
				</select>
			</div>
			<div class="col-md-12">
				<label class="form-label text-light">Special Features</label>
				<div class="d-flex gap-3 flex-wrap">
					<div class="form-check">
						<input class="form-check-input" type="checkbox" name="special_features" id="feature-trailers" value="Trailers">
						<label class="form-check-label text-light" for="feature-trailers">Trailers</label>
					</div>
					<div class="form-check">
						<input class="form-check-input" type="checkbox" name="special_features" id="feature-commentaries" value="Commentaries">
						<label class="form-check-label text-light" for="feature-commentaries">Commentaries</label>
					</div>
					<div class="form-check">
						<input class="form-check-input" type="checkbox" name="special_features" id="feature-deleted" value="Deleted Scenes">
						<label class="form-check-label text-light" for="feature-deleted">Deleted Scenes</label>
					</div>
					<div class="form-check">
						<input class="form-check-input" type="checkbox" name="special_features" id="feature-behind" value="Behind the Scenes">
						<label class="form-check-label text-light" for="feature-behind">Behind the Scenes</label>
					</div>
				</div>
			</div>
		</div>
		<div class="mt-4">
			<button type="submit" class="btn btn-warning fw-bold w-100 py-3" style="font-size: 1.3rem;">Create Movie</button>
		</div>
	</form>
</div>
       
<script>
// Custom validation for at least one category and one actor
document.getElementById('create-movie-form').addEventListener('submit', function(e) {
	const catBtns = document.getElementById('selected-categories').children.length;
	const actorBtns = document.getElementById('selected-actors').children.length;
	let valid = true;
	let msg = '';
	if (catBtns < 1) {
		valid = false;
		msg += 'Please select at least one category.\n';
	}
	if (actorBtns < 1) {
		valid = false;
		msg += 'Please select at least one actor.';
	}
	if (!valid) {
		e.preventDefault();
		alert(msg);
	}
});
// Decoupled button pool for categories and actors, with hidden inputs for form submission
function addButtonAndInput(containerId, hiddenId, inputName, value, text) {
	const container = document.getElementById(containerId);
	const hidden = document.getElementById(hiddenId);
	if (!container || !hidden) return;
	// Prevent duplicate
	if ([...container.children].some(btn => btn.dataset.value === value)) return;
	// Button
	const btn = document.createElement('button');
	btn.type = 'button';
	btn.className = 'btn btn-sm btn-outline-warning me-2 mb-2';
	btn.textContent = text;
	btn.dataset.value = value;
	// Hidden input
	const input = document.createElement('input');
	input.type = 'hidden';
	input.name = inputName;
	input.value = value;
	input.dataset.value = value;
	// Remove both on button click
	btn.onclick = () => {
		btn.remove();
		input.remove();
	};
	container.appendChild(btn);
	hidden.appendChild(input);
}
document.addEventListener('DOMContentLoaded', function () {
	// Categories
	const catSelect = document.getElementById('category');
	if (catSelect) {
		catSelect.addEventListener('change', function (e) {
			const selected = Array.from(catSelect.selectedOptions);
			selected.forEach(opt => {
				addButtonAndInput('selected-categories', 'hidden-categories', 'category', opt.value, opt.text);
				opt.selected = false; // Deselect so user can add again
			});
		});
	}
	// Actors
	const actorSelect = document.getElementById('actors');
	if (actorSelect) {
		let lastInputType = null;
		actorSelect.addEventListener('mousedown', function () { lastInputType = 'mouse'; });
		actorSelect.addEventListener('touchstart', function () { lastInputType = 'touch'; });
		actorSelect.addEventListener('keydown', function () { lastInputType = 'keyboard'; });
		actorSelect.addEventListener('change', function (e) {
			if (lastInputType === 'keyboard') {
				lastInputType = null;
				return;
			}
			const selected = Array.from(actorSelect.selectedOptions);
			selected.forEach(opt => {
				addButtonAndInput('selected-actors', 'hidden-actors', 'actors', opt.value, opt.text);
				opt.selected = false;
			});
			lastInputType = null;
		});
	}
});
</script>

<style>
	.dashboard-title-underline {
		width: 100%;
		max-width: 420px;
		height: 5px;
		margin: 0 auto 1.5rem auto;
		background: linear-gradient(90deg, #ff3333 0%, #ffc107 100%);
		border-radius: 3px;
	}
    #category.choices__input, #category.choices__inner, .choices.staff-choices {
		width: 100% !important;
		min-width: 100%;
		box-sizing: border-box;
	}
	.choices__inner {
		min-height: 48px;
		display: flex;
		align-items: center;
	}
</style>
